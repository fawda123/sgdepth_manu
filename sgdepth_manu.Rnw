\documentclass[letterpaper,12pt,oneside]{article}
\usepackage[paperwidth=8.5in,paperheight=11in,top=1in,bottom=1in,left=1in,right=1in]{geometry}
\usepackage{setspace}
\usepackage[colorlinks=true,allcolors=Blue]{hyperref}
\usepackage[usenames,dvipsnames]{xcolor}
\usepackage{indentfirst}
\usepackage{titlesec}
\usepackage{multirow}
\usepackage{booktabs}
\usepackage{graphicx}
\usepackage{verbatim}
\usepackage{rotating}
\usepackage{tabularx}
\usepackage{outlines}
\usepackage{lineno}
\usepackage{array}
\usepackage{times}
\usepackage{cleveref}
\usepackage{acronym}
\usepackage[position=t]{subfig}
\usepackage{paralist}
\usepackage[noae]{Sweave}
\usepackage{natbib}
\usepackage{array}
\usepackage{pdflscape}
\usepackage{bm}
% \usepackage{showlabels}
\bibpunct{(}{)}{,}{a}{}{,}

% page margins and section title formatting
\linespread{1.5}
\setlength{\footskip}{0.5in}
\titleformat*{\section}{\Large\bf\em}
\titleformat*{\subsection}{\singlespace\large\bf}
\titleformat*{\subsubsection}{\singlespace\normalsize\bf\em}
\titlespacing{\section}{0in}{0in}{0in}
\titlespacing{\subsection}{0in}{0in}{0in}
\titlespacing{\subsubsection}{0in}{0in}{0in}

% cleveref options
\crefname{table}{Table}{Tables}
\crefname{figure}{Fig.}{Figs.}
\renewcommand{\figurename}{Fig.}

% aliased citations
\defcitealias{FLDEP12}{FLDEP 2012}
\defcitealias{HagyIR}{Hagy In review}
\defcitealias{USEPA06}{USEPA 2006}
\defcitealias{USEPA98}{USEPA 1998}

%acronyms
\acrodef{DEM}{Digital Elevation Model}
\acrodef{doc}[$Z_c$]{depth of colonization}
\acrodef{IWR}{Impaired Waters Rule}
\acrodef{NAVD88}{North American Vertical Datum of 1988}
\acrodef{NOAA}{National Oceanic and Atmospheric Administration}

%knitr options
<<setup,include=F,cache=F>>=
library(knitr)
# set global chunk options
opts_chunk$set(fig.path = 'figs/', fig.align='center', fig.show='hold',message=F,echo=F,results='asis',dev='pdf',dev.args=list(family='serif'),fig.pos='!ht',warning=F)
options(replace.assign=TRUE,width=90,digits=1)

source('R/funcs.r')
library(tidyr)
library(dplyr)
library(purrr)
library(nlme)
@

% get the version based on commit date
<<echo = FALSE, cache = FALSE>>=
raw <- system('git log -1', intern = TRUE)
raw <- raw[grep('^Date', raw)]
raw <- paste('Version', raw)
@

% get online bib file
<<echo = FALSE, cache = FALSE>>=
refs <- httr::GET('https://raw.githubusercontent.com/fawda123/refs/master/refs.bib')
refs <- rawToChar(refs$content)
writeLines(refs, con = file('refs.bib'))
@

\begin{document}

\raggedbottom
\linenumbers
\raggedright
\urlstyle{same}
\setlength{\parindent}{0.5in}
\renewcommand\refname{References \vspace{12pt}}

\begin{singlespace}
\title{{\bf {\Large Quantifying seagrass light requirements using an algorithm to spatially resolve depth of colonization}}}
\author{
  {\bf {\normalsize Marcus W. Beck$^1$, James D. Hagy III$^2$, Chengfeng Le$^3$}}
  \\\\{\textit {\normalsize $^1$ORISE Research Participation Program}}
  \\{\textit {\normalsize USEPA National Health and Environmental Effects Research Laboratory}}
  \\{\textit {\normalsize Gulf Ecology Division, 1 Sabine Island Drive, Gulf Breeze, FL 32561}}
	\\{\textit {\normalsize Phone: 850-934-2480, Fax: 850-934-2401, Email: \href{mailto:beck.marcus@epa.gov}{beck.marcus@epa.gov}}}
  \\\\{\textit {\normalsize $^2$USEPA National Health and Environmental Effects Research Laboratory}}
	\\{\textit {\normalsize Gulf Ecology Division, 1 Sabine Island Drive, Gulf Breeze, FL 32561}}
	\\{\textit {\normalsize Phone: 850-934-2455, Fax: 850-934-2401, Email: \href{mailto:hagy.jim@epa.gov}{hagy.jim@epa.gov}}}
  \\\\{\textit {\normalsize $^3$ORISE Research Participation Program}}
  \\{\textit {\normalsize USEPA National Health and Environmental Effects Research Laboratory}}
  \\{\textit {\normalsize Gulf Ecology Division, 1 Sabine Island Drive, Gulf Breeze, FL 32561}}
  \\{\textit {\normalsize Phone: 850-934-9308, Fax: 850-934-2401, Email: \href{mailto:le.chengfeng@epa.gov}{le.chengfeng@epa.gov}}}
  \vspace{1in} 
  \\ \Sexpr{raw}
	}
\date{}
\maketitle
\end{singlespace}
\clearpage

<<echo = F>>=
# load data
data(irl_light)
data(tb_light)
data(choc_light)
irl <- data.frame(irl_light)
tb <- data.frame(tb_light)
choc <- data.frame(choc_light)

# light requirement ranges for each bay
choc_rng <- range(choc$light, na.rm = T)
irl_rng <- range(irl$light, na.rm = T)
tb_rng <- range(tb$light, na.rm = T)
@

% data for inline expressions
<<echo = F>>=
data(seg_summ)

# surface areas
areas <- seg_summ[row.names(seg_summ) %in% 'Surface area',]
areas <- as.numeric(areas)
names(areas) <- names(seg_summ)

# seagrass percent coverage
sgperc <- seg_summ[row.names(seg_summ) %in% 'Seagrass area',]
sgperc <- 100 * as.numeric(sgperc) / areas
names(sgperc) <- names(seg_summ)

# mean depth
depths <- seg_summ[row.names(seg_summ) %in% 'Depth (mean)',]
depths <- as.numeric(depths)
names(depths) <- names(seg_summ)

#max depths
mdepths <- seg_summ[row.names(seg_summ) %in% 'Depth (max)',]
mdepths <- as.numeric(mdepths)
names(mdepths) <- names(seg_summ)

# secchi depths
secchis <- seg_summ[row.names(seg_summ) %in% 'Secchi (mean)',]
secchis <- as.numeric(secchis)
names(secchis) <- names(seg_summ)
@

% seagrass estimates from table
<<echo = F>>=
data(ests_seg)
data(ests_out)

# big bend doc max diff
bb_ests <- mean(ests_out[ests_out$seg == '820', 'z_cmax'])

# irl estimates
irl_maxdocmin <- max(ests_out[ests_out$seg == '1502', c('z_cmin')])
irl_meandocmax <- mean(ests_out[ests_out$seg == '1502', c('z_cmax')])
irl_maxdocmax <- max(ests_out[ests_out$seg == '1502', c('z_cmax')])
@

<<echo = F>>=
data(ests_out)
data(ests_out_nonsigs)

# uncertainty means
means <- dplyr::group_by(ests_out, seg) %>% 
  summarize(means = mean(confint, na.rm = T)) %>% 
  as.data.frame(.)

# uncertainty means
maxs <- dplyr::group_by(ests_out, seg) %>% 
  summarize(maxs = max(confint, na.rm = T)) %>% 
  as.data.frame(.)

# percent non-overlapping
# 'overlapped' indicates percent non-different between depth measures
# interval is non-symmetric but this does not affect overlap
overlap <- dplyr::mutate(ests_out, halved = confint/2) %>% 
  mutate(
    overlapped = (z_cmax - halved) < (z_cmed + halved)
  ) %>% 
  group_by(seg) %>% 
  summarize(
    overlapped = 100 * sum(overlapped)/length(overlapped)
  ) %>% 
  as.data.frame(.)

# of those that were estimable, which had z_cmax sig greater than zero?
nonsigs <- dplyr::mutate(ests_out_nonsigs,
    ltzero = lower_max < 0
  ) %>% 
  group_by(seg) %>% 
  summarize(
    ltzero = 100 * sum(ltzero)/length(ltzero)
  ) %>% 
  as.data.frame(.)

@

<<echo = F>>=
# load data
data(irl_light)
data(tb_light)
data(choc_light)
irl <- data.frame(irl_light)
tb <- data.frame(tb_light)
choc <- data.frame(choc_light)

# aov of zmax between bays
zcall <- reshape2::melt(
  list(tb = tb$z_c_all, irl = irl$z_c_all, choc = choc$z_c_all)
  )
zcall_means <- aggregate(value ~ L1, data = zcall, FUN = mean)
zcall_means <- split(zcall_means$value, zcall_means$L1)
zcall_aov <- summary(lm(value ~ L1, data = zcall))$fstatistic
zcall_aov <- c(zcall_aov, pf(zcall_aov[1], zcall_aov[2], zcall_aov[3],lower.tail=F))
names(zcall_aov) <- c('Fval', 'df1', 'df2', 'pval')
zcall_tuk <- aov(value ~ L1, data = zcall)
zcall_tuk <- TukeyHSD(zcall_tuk)

# aov between bays
light_btw <- reshape2::melt(
  list(tb = tb$light, irl = irl$light, choc = choc$light)
  )
light_btw_means <- aggregate(value ~ L1, data = light_btw, FUN = mean)
aov_btw <- summary(lm(value ~ L1, data = light_btw))$fstatistic
aov_btw <- c(aov_btw, pf(aov_btw[1], aov_btw[2], aov_btw[3],lower.tail=F))
names(aov_btw) <- c('Fval', 'df1', 'df2', 'pval')
tuk_btw <- aov(value ~ L1, data = light_btw)
tuk_btw <- TukeyHSD(tuk_btw)

# light within bays
wtn_tb <- summary(lm(light ~ seg, data = tb))$fstatistic
wtn_tb <- c(wtn_tb, pf(wtn_tb[1], wtn_tb[2], wtn_tb[3],lower.tail=F))
names(wtn_tb) <- c('Fval', 'df1', 'df2', 'pval')
wtn_irl <- summary(lm(light ~ seg, data = irl))$fstatistic
wtn_irl <- c(wtn_irl, pf(wtn_irl[1], wtn_irl[2], wtn_irl[3],lower.tail=F))
names(wtn_irl) <- c('Fval', 'df1', 'df2', 'pval')
wtn_choc <- summary(lm(light ~ seg, data = choc))$fstatistic
wtn_choc <- c(wtn_choc, pf(wtn_choc[1], wtn_choc[2], wtn_choc[3],lower.tail=F))
names(wtn_choc) <- c('Fval', 'df1', 'df2', 'pval')

# tukey comps
tuk_tb <- aov(light ~ seg, data = tb)
tuk_tb <- TukeyHSD(tuk_tb)$seg[, 'p adj']
# tuk_tb <- tuk_tb[tuk_tb < 0.05]
tuk_irl <- aov(light ~ seg, data = irl)
tuk_irl <- TukeyHSD(tuk_irl)$seg[, 'p adj']
# tuk_irl <- tuk_irl[tuk_irl < 0.05]
tuk_choc <- aov(light ~ seg, data = choc)
tuk_choc <- TukeyHSD(tuk_choc)$seg[, 'p adj']
# tuk_choc <- tuk_choc[tuk_choc < 0.05]
@

% dixon compare
<<eval = F>>=
source('R/funcs.r')

# load data
data(tb_sats)
data(tb_seg)
data(sgpts_2010_tb)
ave_rast <- tb_sats[['ave_rast']]

# create sampling grid, 0.01 dec degree spacing
tb_grd <- grid_est(tb_seg, 0.01)

# dixon locations
locs <- data.frame(
  westd = rep(-82, 4),
  westm = c(-41.4, -38.5, -35, -40.1)/60,
  northd = rep(27, 4), 
  northm = c(38.3, 41.8, 37.5, 31.8)/60 
)
locs <- with(locs, data.frame(
  west = westd + westm,
  north = northd + northm 
))

# sample the satellit clarity raster
samp_vals <- raster::extract(ave_rast, locs, sp = T) %>% 
  data.frame  
samp_vals <- cbind(samp_vals, data.frame(locs))
names(samp_vals) <- c('SD', 'Longitude', 'Latitude')
coordinates(samp_vals) <- c('Longitude', 'Latitude')

# process for seagrass depth limits and light requirements
proc <- secc_doc(samp_vals, sgpts_2010_tb, tb_seg, seg_pts_yr = 2010, radius = 0.1, trace = T)
@

%%%%%%
% tables

% summary of wbid characteristics
<<eval = T, echo = F>>=

load(file = 'data/seg_summ.RData')

# rearrange col orders for alphabetical
names(seg_summ) <- c('WCB', 'BB', 'OTB', 'UIRL')
seg_summ <- seg_summ[, order(names(seg_summ))]

# prep table
tab <- seg_summ
nms <- names(tab)
tab <- data.frame(apply(tab, 2, form_fun), stringsAsFactors = F)
tab<- rbind(year = c('2006', '2010', '2009', '2007'), tab)
names(tab) <- nms
rows <- c('Year\\textsuperscript{\\textit{b}}', 'Latitude', 'Longitude', 'Surface area', 'Seagrass area', 'Depth (mean)', 'Depth (max)', 'Secchi (mean)', 'Secchi (se)')

# shorten names
names(tab) <- gsub('BB', 'BB\\\\textsuperscript{\\\\textit{a}}', names(tab))

cap.val <- "Characteristics of coastal segments used to evaluate seagrass \\acl{doc} estimates (see \\cref{fig:seg_all} for spatial distribution).  Year is the date of the seagrass coverage and bathymetric data.  Latitude and longitude are the geographic centers of each segment.  Area and depth values are meters and square kilometers, respectively.  Secchi measurements (m) were obtained from the Florida Department of Environmental Protection's \\acl{IWR} (\\acs{IWR}) database, update number 40.  Secchi mean and standard errors are based on all observations within the ten years preceding each seagrass survey."

foot.val <- '\\footnotesize \\textsuperscript{\\textit{a}} BB: Big Bend, OTB: Old Tampa Bay, UIRL: Upper Indian R. Lagoon, WCB: Western Choctawhatchee Bay\\\\\\textsuperscript{\\textit{b}} Seagrass coverage data sources, see \\cref{sec:data_srcs} for bathymetry data sources:\\scriptsize\\\\BB: \\url{http://atoll.floridamarine.org/Data/metadata/SDE_Current/seagrass_bigbend_2006_poly.htm}\\\\OTB: \\url{http://www.swfwmd.state.fl.us/data/gis/layer_library/category/swim}\\\\UIRL: \\url{http://www.sjrwmd.com/gisdevelopment/docs/themes.html}\\\\WCB: \\url{http://atoll.floridamarine.org/data/metadata/SDE_Current/seagrass_chotawhatchee_2007_poly.htm}'

latex( 
  tab,
  file = '',
  rowlabel = '',
  caption = cap.val,
  caption.loc = 'top',
  insert.bottom = foot.val, 
  rowname = rows,
  label = 'tab:seg_summ'
  )

@

% comparisons with segment wide ests
<<eval = T, echo = F>>=

# load data
load(file = 'data/ests_seg.RData')
load(file = 'data/ests_out.RData')

# summarize spatial ests for grid points
ests_summ <- select(ests_out, -optional, -confint, -lower_max) %>% 
  gather('var', 'val', z_cmin:z_cmax) %>% 
  group_by(seg, var) %>% 
  nest %>% 
  mutate(summs = map(data, function(x){
    
    # model to get average and ste that account for spatial corr
    mod <- gls(val ~ 1, correlation = corGaus(form = ~ long + lat, nugget = TRUE), data = x) %>% 
      summary %>% 
      .$tTable
    
    # get all estimates
    est <- mod[1]
    est_ste <- mod[2]
    est_std <- sd(x$val, na.rm = TRUE)
    est_min <- min(x$val, na.rm = TRUE)
    est_max <- max(x$val, na.rm = TRUE)
    
    # output
    data.frame(est = est, est_ste = est_ste, est_std = est_std, est_min = est_min, est_max = est_max)
    
    })
  ) %>% 
  select(-data) %>% 
  unnest

# merge with segment wide ests
tonm <- grep('min$|med$|max$', names(ests_seg))
names(ests_seg)[tonm] <- paste0(names(ests_seg)[tonm], '_estwide')
to_tab <- select(ests_seg, -long, -lat) %>% 
  gather('var', 'val', -seg) %>% 
  mutate(var = gsub('z_', '', var)) %>% 
  separate(var, c('var', 'typ'), sep = '_') %>% 
  mutate(var = paste0('z_', var)) %>% 
  spread(typ, val) %>% 
  left_join(ests_summ, by = c('seg', 'var')) %>% 
  mutate(
    seg = factor(as.character(seg), 
      levels = c('820', '902', '1502', '303'), 
      labels = c('BB', 'OTB', 'UIRL', 'WCB')
      ), 
    var = factor(var, 
      levels = c('z_cmin', 'z_cmed', 'z_cmax'), 
      labels = c('$Z_{c,\\,min}$', '$Z_{c,\\,med}$', '$Z_{c,\\,max}$')
      )
  ) %>% 
  arrange(seg, var)

names(to_tab) <- c('Segment', 'Estimate', 'Whole Segment', 'Pred. Int. (+/-)', 'Mean', 'St. Err.', 'St. Dev.', 'Min', 'Max')

# prep table
estimate <- to_tab$Estimate
segs <- levels(to_tab$Segment)
nms <- names(to_tab)[-c(1, 2)]
tab <- to_tab[, !names(to_tab) %in% c('Segment', 'Estimate')]

tab <- data.frame(apply(tab, 2, form_fun), stringsAsFactors = F)
names(tab) <- nms

foot.val<-'\\textsuperscript{\\textit{a}}\\footnotesize BB: Big Bend, OTB: Old Tampa Bay, UIRL: Upper Indian River Lagoon, WCB: Western Choctawhatchee Bay.' 

cap.val <- "Summary of seagrass depth estimates (m) for each segment in \\cref{fig:all_ests}.  Whole segment estimates and prediction intervals were obtained from a single point estimate that included all seagrass depth data for the segment. Mean, standard error, standard deviation, minimum, and maximum values are for multiple grid points within each segment in \\cref{fig:all_ests}.  Mean and standard error estimates were from intercept-only models that included Gaussian correlation structures to account for spatial dependencies between points."

latex(
  tab,
  file = '',
  rowlabel = '{\\bf Segment\\textsuperscript{\\textit{a}}}',
  caption = cap.val,
  dcolumn = T,
  caption.loc = 'top',
  rgroup = segs,
  n.rgroup = rep(3,4),
  insert.bottom = foot.val,
  rowname = estimate,
  label = 'tab:est_summ'
  )

@

% summary of light requirements analysis, med depth ests
<<eval = T, echo = F>>=

##
# load data

# load results from figure chunks
data(tb_light)
data(irl_light)
data(choc_light)

##
# prep data

# add bay column, select relevant columns
choc_light <- mutate(choc_light, bay = 'Choctawhatchee Bay') %>% 
  select(bay, seg, z_c_all, light)
irl_light <- mutate(irl_light, bay = 'Indian River Lagoon')%>% 
  select(bay, seg, z_c_all, light)
tb_light <- mutate(tb_light, bay = 'Tampa Bay')%>% 
  select(bay, seg, z_c_all, light)

# summarize
all_light <- rbind(choc_light, irl_light, tb_light) %>% 
  group_by(bay, seg) %>% 
  summarize(
    n_locs = length(seg), 
    mean_z_cmed = mean(z_c_all), 
    sd_z_cmed = sd(z_c_all),
    min_z_cmed = min(z_c_all),
    max_z_cmed = max(z_c_all),
    mean_light = mean(light),
    sd_light = sd(light),
    min_light = min(light),
    max_light = max(light)
    )

save(all_light, file = 'data/all_light.RData')

# load data
data(all_light)

# prep for table
tab <- data.frame(all_light)
# tab <- tab[, !grepl('_light$', names(tab))]
rows <- tab[, 2]
tab <- tab[, -c(1:2)]
tab[, 2:9] <- formtab_fun(tab[, 2:9], 1, 1, 1)
nms <- names(tab) # this is fucked
ncoltab <- ncol(tab)
nrowtab <- nrow(tab)
tab <- unlist(tab)
tab[grepl('NaN$', tab)] <-  ' '
tab <- matrix(tab, nrow = nrowtab, ncol = ncoltab)
tab <- data.frame(tab)
names(tab) <- nms

cap.val<-'Summary of median depth of colonization ($Z_{c,\\,med}$, m) and light requirements (\\%) for all bay segments of Choctawhatchee Bay, Indian River Lagoon, and Tampa Bay.  See \\cref{fig:light_choc,fig:light_tb,fig:light_irl} for spatial distribution of the results.'

foot.val<-'\\textsuperscript{\\textit{a}}\\footnotesize CCB: Central Choctawhatchee Bay, ECB: Eastern Choctawhatchee Bay, WCB: Western Choctawhatchee Bay, BR: Banana R., LCIRL: Lower Central Indian R. Lagoon, LIRL: Lower Indian R. Lagoon, LML: Lower Mosquito Lagoon, UCIRL: Upper Central Indian R. Lagoon, UIRL: Upper Indian R. Lagoon, UML: Upper Mosquito Lagoon, HB: Hillsborough Bay, LTB: Lower Tampa Bay, MTB: Middle Tampa Bay, OTB: Old Tampa Bay.' 
col_heads <- c('$n$', rep(c('Mean', 'St. Dev.', 'Min', 'Max'), 2))

latex( 
  tab,
  file = '',
  rowlabel = 'Segment\\textsuperscript{\\textit{a}}',
  rgroup = c('Choctawhatchee Bay', 'Indian River Lagoon', 'Tampa Bay'), 
  n.rgroup = c(3, 7, 4),
  insert.bottom = foot.val,
  caption = cap.val,
  colheads = col_heads,
  cgroup = c('', '{\\bf $Z_{c,\\,med}$}', '\\% light'), 
  n.cgroup = c(1, 4, 4),
  caption.loc = 'top',
  rowname = rows,
  size = 'small', 
  label = 'tab:light_summ'
  )

@

\clearpage

%%%%%%
% figures

% example of buffer points for depth of col
<<buff_ex, cache = T, fig = F, echo = F, eval = T, message = F, results = 'hide', include = F>>=
########

# reset digits
options(digits = 4)

# load data, buff_ex_dat was created from various shapefiles
data(buff_ex_dat)
seg <- buff_ex_dat[['seg']] # 820 segment polygon
state <- buff_ex_dat[['state']] # florida state polygon
sgpoly <- buff_ex_dat[['sgpoly']] # 820 segment seagrass polygon
sgrass <- buff_ex_dat[['sgrass']] # 820 segment seagrass depth point
depths <- buff_ex_dat[['depths']] # 820 segment bathymetry dem, for contour lines
rm('buff_ex_dat')

# get a subsample of seagrass depth points for plotting
set.seed(4321)

est_pts <- grid_est(seg, spacing = 0.02)
sgrass <- sgrass[sample(1:length(sgrass), 1000), ]
test_pt <- est_pts[27, ]
buff_pts <- buff_ext(sgrass, test_pt, buff = 0.02)

# format buff_pts and sgrass for plotting
buff_pts <- data.frame(buff_pts)
levels(buff_pts$Seagrass) <- c('Seagrass present', 'Seagrass present', 'Seagrass absent')
buff_pts$Seagrass <- as.character(buff_pts$Seagrass)
sgrass <- data.frame(sgrass)
levels(sgrass$Seagrass) <- c('Seagrass present', 'Seagrass present', 'Seagrass absent')
sgrass$Seagrass <- as.character(sgrass$Seagrass)

# segment wide est for zcmax (all cats) for 820 from Hagy is 3.855
# get contour lines from bathymetry layer, one for whole segment and one for limit
to_cont <- seq(1, 15, by = 2)
im <- as.image.SpatialGridDataFrame(depths)
conts <- contourLines(im, levels = -1 * to_cont)
conts <- ContourLines2SLDF(conts)
zc_conts <- contourLines(im, levels = -3.855)
zc_conts <- ContourLines2SLDF(zc_conts)

# seagrass and depth contours
p1 <- ggplot(state, aes(long, lat, group = group)) + 
  geom_polygon(fill = 'lightgrey') +
  geom_polygon(data = seg, fill = 'white', col = 'black', aes(size = 'Segment polygon')) + 
  geom_polygon(data = sgpoly, aes(group = group, fill = 'Seagrass coverage'), 
    alpha = 0.7) + 
  geom_polygon(data = state, aes(group = group), 
    fill = 'grey') + 
  geom_path(data = conts, 
    aes(group = group, linetype = 'dashed')
    ) + 
  geom_path(data = zc_conts, 
    aes(group = group, colour = 'Estimated depth\nlimit for segment'), 
    size = 2
    ) +
  scale_fill_manual(values = 'royalblue') + 
  scale_colour_manual(
    values = 'red'
    ) +
  scale_size_manual('', values = 2) +
  scale_linetype_manual(labels = '2 m depth contours', values = 'dashed') +
  theme_classic() +
  coord_equal() +
  xlab('Longitude') +
  ylab('Latitude') +
  coord_map(
    xlim = c(-83.65, -83.35),
    ylim = c(29.4, 29.8)
  ) +
  theme(axis.text = element_text(size = 10),
    axis.title = element_text(size = 20), 
    legend.text = element_text(size = 20),
    legend.title = element_blank(), 
    axis.line.x = element_line(), 
    axis.line.y = element_line()
  ) + 
  guides(fill = guide_legend(order = 1), 
    linetype = guide_legend(order = 2), 
    colour = guide_legend(order = 3)
  )

p1leg <- g_legend(p1)
p1 <- p1 + theme(legend.position = 'none')

p2 <- ggplot(seg, aes(long, lat)) + 
  geom_polygon(fill = 'white') +
  geom_path(color = 'black', size = 2) +
  geom_polygon(data = state, aes(group = group), fill = 'lightgrey') + 
  xlab('Longitude') +
  ylab('Latitude') +
  geom_point(
    data = data.frame(sgrass), 
    aes(x = coords_x1, y = coords_x2, shape = Seagrass), col = 'royalblue'
    ) +
  geom_point(
    data = data.frame(est_pts), 
    aes(Var1, Var2), size = 3, pch = 21, col = 'black', bg = 'white'
  ) +  
  geom_point(
    data = data.frame(est_pts), 
    aes(Var1, Var2), size = 17, pch = 1, colour = 'grey60'
  ) +
  scale_shape_manual('', values = c(2, 16)) +
  coord_equal() +
  coord_map(
    xlim = c(-83.65, -83.35),
    ylim = c(29.4, 29.8)
    ) + 
  theme_classic() +
  theme(axis.text = element_text(size = 10),
    legend.text = element_text(size = 20),
    axis.title = element_text(size = 20), 
    axis.line.x = element_line(), 
    axis.line.y = element_line()
    )

p2leg <- g_legend(p2)
p2 <- p2 + theme(legend.position = 'none')

p3 <- ggplot(seg, aes(long, lat)) + 
  geom_polygon(fill = 'white') +
  geom_path(color = 'black', size = 2) +
  geom_polygon(data = state, aes(group = group), fill = 'lightgrey') +
  theme_classic() +
  coord_equal() +
  xlab('Longitude') +
  ylab('Latitude') +
  coord_map(
    xlim = c(-83.65, -83.35),
    ylim = c(29.4, 29.8)
    ) +
  geom_point(
    data = buff_pts,
    aes(coords.x1, coords.x2, pch = Seagrass), 
    colour = 'royalblue'
  ) + 
  geom_point(
    data = data.frame(est_pts), 
    aes(Var1, Var2), colour = 'black', bg = 'white', size = 3, pch = 21
  ) +
  geom_point(
    data = data.frame(test_pt),
    aes(Var1, Var2), colour = 'red', size = 5, pch = 16
  ) +
  geom_point(
    data = data.frame(test_pt),
    aes(Var1, Var2), size = 17, pch = 1, colour = 'grey60'
  ) +
  scale_shape_manual('', values = c(2, 16)) +
  theme(axis.text = element_text(size = 10),
    legend.text = element_text(size = 20), 
    axis.title = element_text(size = 20), 
    legend.position = 'none', 
    axis.line.x = element_line(), 
    axis.line.y = element_line())

pleg <- ggplot(seg, aes(long, lat)) + 
  geom_polygon(fill = 'white') +
  geom_path(color = 'black') +
  theme_classic() +
  coord_equal() +
  xlab('Longitude') +
  ylab('Latitude') +
  scale_x_continuous(limits = c(-83.65, -83.35)) +
  scale_y_continuous(limits = c(29.4, 29.8)) +
  geom_point(
    data = data.frame(est_pts), 
    aes(Var1, Var2, colour = 'grid', size = 'grid', pch = 'grid')
  ) +
  geom_point(
    data = data.frame(test_pt),
    aes(Var1, Var2, colour = 'test', size = 'test', pch = 'test')
  ) +
  geom_point(
    data = data.frame(est_pts), 
    aes(Var1, Var2, size = 'rad', pch = 'rad', colour = 'rad')
  )  +
  scale_colour_manual('', labels = c('Estimation grid', 'Test point', 'Sample area'), values = c('black', 'red', 'grey60')) +
  scale_size_manual('', labels = c('Estimation grid', 'Test point', 'Sample area'), values = c(3, 4, 10)) +
  scale_shape_manual('', labels = c('Estimation grid', 'Test point', 'Sample area'), values = c(1, 16, 1)) +
theme(axis.text = element_text(size = 20),
  legend.text = element_text(size = 20),
  axis.title = element_text(size = 20)
  )

pleg <- g_legend(pleg)

pdf('figs/buff_ex.pdf', height = 6, width = 6, family = 'serif')
p1
p2
p3
grid.arrange(p1leg, p2leg, pleg, heights = c(1, 0.6, 0.6), ncol = 1)
dev.off()
   
options(digits = 2)
@

% example of buffer points for depth of col
\begin{figure}
\centering
\subfloat[][Seagrass coverage and bathymetry for the segment]{
\includegraphics[width=0.5\textwidth,page=1]{figs/buff_ex.pdf}
\label{fig:buff_ex1}
}
\subfloat[][Grid of locations and sample areas for estimates]{
\includegraphics[width=0.5\textwidth,page=2]{figs/buff_ex.pdf}
\label{fig:buff_ex2}
}

\subfloat[][Sampled seagrass data for a test point]{
\includegraphics[width=0.5\textwidth,page=3]{figs/buff_ex.pdf}
\label{fig:buff_ex3}
}
\subfloat{
\includegraphics[width=0.5\textwidth,page=4]{figs/buff_ex.pdf}
}
\caption{Examples of data and grid locations for estimating seagrass depth of colonization for a region of the Big Bend, Florida.  \Cref{fig:buff_ex1} shows the seagrass coverage and depth contours at 2 meter intervals, including the whole segment estimate for depth of colonization. \cref{fig:buff_ex2} shows a grid of sampling locations with sampling radii for estimating \ac{doc} and seagrass depth points derived from bathymetry and seagrass coverage layers.  \cref{fig:buff_ex3} shows an example of sampled seagrass depth points for a test location.  Estimates in \cref{fig:est_ex} were obtained from the test location in \cref{fig:buff_ex3}.}
\label{fig:buff_ex}
\end{figure}

% example of depth of col ests for wbid - big bend 820
\begin{figure}
\centerline{\includegraphics[width = \textwidth]{figs/seg_all.pdf}}
\caption{Locations and seagrass coverage of estuary segments used to evaluate \acl{doc} estimates.  Seagrass coverage layers are from 2006 (BB: Big Bend), 2010 (OTB: Old Tampa Bay), 2009 (UIRL: Upper Indian R. Lagoon), and 2007 (WCB: Western Choctawhatchee Bay).}
\label{fig:seg_all}
\end{figure}

% example of estimating seagrass depth of colonization

% example of depth of col ests for wbid - big bend 820
\begin{figure}
\centering
\includegraphics[width=0.85\textwidth]{figs/Fig3_Hagy.pdf}
\caption{Methods for estimating seagrass depth of colonization using sampled seagrass depth points around a single location. Three depth estimates ($Z_{c,\,min}$, $Z_{c,\,med}$, $Z_{c,\,max}$) are based on a linear curve through the inflection point of a logistic growth curve .  The logistic curve is defined by the parameters $\alpha$, $\beta$, and $\gamma$ and describes the decrease in the proportion of sample points with seagrass as a function of depth below mean tide leavel (MTL).  The top figure shows the estimation method when the linear curve intercepts $\alpha$ at depth greater than zero and the bottom figure shows the estimation method when the linear curve intercepts $\alpha$ at depth less than zero.}
\label{fig:est_ex}
\end{figure}

% grid examples for each segment
<<all_ests, echo = F, cache = T, results = 'hide', eval = T>>=

options(digits = 2)

##
# load data
# ests out created in chunk for table 'tab:est_summ'
data(shps)
data(ests_out)

##
# make plots

# colors and pt_sz
col_vals <- c('blue', 'lightblue', 'yellow', 'brown')
pt_sz <- 2
  
# segments for plotting
all_segs <- shps[grepl('^seg_', names(shps))]
all_segs <- lapply(all_segs, fortify)
all_segs <- do.call('rbind', all_segs)
all_segs$group <- gsub('^seg_|\\.shp\\.[0-9]*$', '', row.names(all_segs))
all_segs$group <- factor(all_segs$group, levels = c('820', '902', '1502', '303'), 
  labels = c('BB', 'OTB', 'UIRL', 'WCB'))
all_segs$group <- as.character(all_segs$group)
levs <- sort(unique(all_segs$group))

levels(ests_out$seg) <- c('WCB', 'BB', 'OTB', 'UIRL')

# assign plots by segment and doc est
for(i in 1:length(levs)){
  
  # subset segment shapefiles and ests by segment
  seg_sub <- all_segs[all_segs$group %in% levs[i], ]
  est_sub <- ests_out[ests_out$seg %in% levs[i], ]
  
  # points to plot
  pt_plo <- data.frame(est_sub[, c('seg', 'long', 'lat', 'z_cmax')])
  
  # segment base plot
  p_seg <- ggplot(seg_sub, aes(x = long, y = lat)) +
    geom_polygon(fill = NA, colour = 'black') + 
    coord_fixed() +
    theme_classic() +
    theme(axis.title = element_blank(), axis.text = element_text(size = 6), 
      axis.text.x = element_text(angle = 90, vjust = 0.5),
      plot.margin=unit(c(0, 0, 0, 0), "cm"), 
      axis.line.x = element_line(), axis.line.y = element_line()) + 
    scale_x_continuous(labels = fmt()) + 
    scale_y_continuous(labels = fmt())
  
  # z_cmax
  pa <- p_seg +
    geom_point(data = pt_plo, aes(x = long, y = lat, colour = z_cmax), 
      size = pt_sz, alpha = 0.8) +
    scale_colour_gradientn(colours = col_vals) +
    theme(legend.title = element_blank())

  # legends
  paleg <- g_legend(pa)
  pa <- pa + theme(legend.position = 'none')

  # assign to global
  assign(paste0('pa', i), pa)
  assign(paste0('paleg', i), paleg)

  }

# labels
# lab1 <- expression(italic(Z ['c, max']), '(m)')

# arrange all as grob
grobwidths <- c(1, 0.3)

pdf('figs/all_ests.pdf', height = 7, width = 7, family = 'serif')
grid.arrange(
  arrangeGrob(pa1, paleg1, ncol = 2, widths = grobwidths),
  arrangeGrob(pa2, paleg2, ncol = 2, widths = grobwidths),
  arrangeGrob(pa3, paleg3, ncol = 2, widths = grobwidths),
  arrangeGrob(pa4, paleg4, ncol = 2, widths = grobwidths),
  ncol = 2, widths = c(0.85, 1)
)
dev.off()

@
\begin{figure}
\centering
\includegraphics[width = 0.95\textwidth]{figs/all_ests.pdf}
\caption{Spatially-resolved estimates of maximum seagrass depth of colonization (m) for four coastal segments of Florida.  Estimates are assigned to grid locations for each segment, where grid spacing was fixed at 0.02 decimal degrees.  Radii for sampling seagrass bathymetric data around each grid location were fixed at 0.06 decimal degrees. From left to right, top to bottom: Big Bend, Old Tampa Bay, Upper Indian R. Lagoon, Western Choctawhatchee Bay.}
\label{fig:all_ests}
\end{figure}

% satellite estimates of water clarity for choc bay
<<kd_choc, echo = F, eval = T, cache = T, results = 'hide'>>=
options(digits = 7) 

# load data
data(choc_seg)
data(choc_sats_crc)

# clip sats_melt

sats_melt <- reshape2::melt(choc_sats_crc[['sats_all']], id.var = c('lat', 'lon'))

# color ramp
cols <- c('blue', 'lightblue', 'yellow', 'brown')

# prep data

to_plo <- sats_melt
to_plo$variable <- factor(to_plo$variable, labels = c('Average', seq(2003, 2007)))
seg_plo <- fortify(choc_seg)

# leg lab
leg_lab <- expression(paste(italic(K [d]), ' (', m^-1, ')')) 

# make plot
p <- ggplot(data = seg_plo) +
  geom_polygon(aes(x = long, y = lat, group = group), 
    colour = 'black', fill = colors()[245]) +
  geom_tile(data = subset(to_plo, !is.na(value)), 
    aes(x = lon, y = lat, fill = value, colour = value)
  ) +
  geom_polygon(aes(x = long, y = lat, group = group), 
    colour = 'black', fill = NA) +
  coord_equal() +
  facet_wrap(~ variable, ncol = 2) + 
  scale_colour_gradientn(leg_lab, colours = cols) +
  scale_fill_gradientn(leg_lab, colours = cols) +
  scale_x_continuous(expand = c(0,0)) + 
  scale_y_continuous(expand = c(0,0)) +
  theme_classic() +
  theme(
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(), 
    axis.title.x = element_blank(), 
    axis.title.y = element_blank(),
    axis.text.x = element_text(size = 8), 
    axis.text.y = element_text(size = 8),
    legend.position = 'top', 
    axis.line.x = element_line(), 
    axis.line.y = element_line(),
    legend.text = element_text(size = 6)
    )

pdf('figs/kd_choc.pdf', height = 4, width = 6, family = 'serif')
p
dev.off()
@
\begin{figure}
\centering
\includegraphics[width = \textwidth]{figs/kd_choc.pdf}
\caption{Satellite estimated light attenuation for Choctawhatchee Bay.  Each facet is an annual average of light attenuation for available years of satellite data up to the year of seagrass coverage used to estimate depth of colonization.  The first facet is an average of all years.  See \cref{fig:light_choc} for segment identification.}
\label{fig:kd_choc}
\end{figure}

% satellite estimates of water clarity for Tampa Bay
<<clarity_tb, echo = F, eval = T, cache = T, results = 'hide'>>=
options(digits = 7) 

# load data
data(tb_seg)
data(tb_sats)
sats_melt <- reshape2::melt(tb_sats[['sats_all']], id.var = c('lat', 'lon'))

# color ramp
cols <- rev(c('blue', 'lightblue', 'yellow', 'brown'))

# prep data
to_plo <- sats_melt
to_plo$variable <- factor(to_plo$variable, labels = c('Average', seq(2006, 2010)))
seg_plo <- fortify(tb_seg)

# leg lab
leg_lab <- 'Clarity (m)'

# make plot
p <- ggplot(data = seg_plo) +
  geom_polygon(aes(x = long, y = lat, group = group), 
    colour = 'black', fill = colors()[245]) +
  geom_tile(data = subset(to_plo, !is.na(value)), 
    aes(x = lon, y = lat, fill = value, colour = value)
  ) +
  geom_polygon(aes(x = long, y = lat, group = group), 
    colour = 'black', fill = NA) +
  coord_equal() +
  facet_wrap(~ variable) + 
  scale_colour_gradientn(leg_lab, colours = cols) +
  scale_fill_gradientn(leg_lab, colours = cols) +
  scale_x_continuous(expand = c(0,0)) + 
  scale_y_continuous(expand = c(0,0)) +
  theme_classic() +
  theme(
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(), 
    axis.title.x = element_blank(), 
    axis.title.y = element_blank(),
    axis.text.x = element_text(size = 8), 
    axis.text.y = element_text(size = 8), 
    legend.position = 'top', 
    axis.line.x = element_line(), 
    axis.line.y = element_line()
    )

pdf('figs/clarity_tb.pdf', height = 7.5, width = 7, family = 'serif')
p
dev.off()
@
\begin{figure}
\centering
\includegraphics[width = \textwidth]{figs/clarity_tb.pdf}
\caption{Satellite estimated water clarity for Tampa Bay.  Each facet is an annual average of water clarity for available years of satellite data. The first facet is an average of all years.  See \cref{fig:light_tb} for segment identification.}
\label{fig:clarity_tb}
\end{figure}

% estimated light requirements for Choctawhatchee Bay
<<light_choc, echo = F, eval = T, cache = T, include = FALSE, results = 'hide'>>=

library(grid)

# reset digits to default
options(digits = 7)

data(choc_light)
data(choc_seg)

# centroids for labels
labs <- data.frame(rgeos::gCentroid(choc_seg, byid = T))
labs$seg <- choc_seg$seg

fill_col <- colors()[245]

# format data, remove outliers
dat <- data.frame(choc_light)
dat$seg <- factor(dat$seg, levels = c('WCB', 'CCB', 'ECB'))
dat <- dat[dat$light < 80, ]

# color ramp for all graphs
pt_cols <- c('blue', 'lightblue', 'yellow', 'brown')

# legend formatting, z_cmed
scls <- c(2, 9)
scl_vals <- scales::rescale(dat$z_c_all, to = scls)
leg_brks <- seq(min(dat$z_c_all, na.rm =  T), max(dat$z_c_all, na.rm = T), length = 6)
leg_labs <- form_fun(leg_brks, 2, 2, 2)

# map, z_cmed
p1 <- ggplot(fortify(choc_seg), aes(long, lat)) + 
  geom_polygon(colour = 'black', fill = fill_col, aes(group = group)) +
  geom_point(data = dat, aes(x = Longitude, y = Latitude, 
    colour = z_c_all), fill = 'black', alpha = 0.8, size = 3) +
  geom_text(data = labs, aes(label = seg, x = x, y = y)) +
  theme_classic() +
  coord_equal() +
  scale_x_continuous(labels = fmt()) + 
  xlab('Longitude') +
  scale_y_continuous(labels = fmt()) + 
  ylab('Latitude') +
  scale_size(name = bquote(italic('Z' ['c, med'])), range = scls, 
    breaks = leg_brks, 
    labels = leg_labs) + 
  scale_colour_gradientn(name = bquote(italic('Z' ['c, med'])), 
    colours = rev(pt_cols),
    breaks = leg_brks, labels = leg_labs) +
  guides(colour = guide_legend(), size = guide_legend()) + 
  guides(colour = guide_legend(), size = guide_legend())

p1leg <- g_legend(p1)
p1 <- p1 + theme(legend.position = 'none', 
  axis.line.x = element_line(), 
  axis.line.y = element_line()
  )

# boxplots by seg, z_cmed
# reorder seg labels
p2 <- ggplot(dat, aes(x = seg, y = z_c_all)) + 
  geom_boxplot(fill = fill_col, width = 0.6) + 
  ylab(bquote(italic('Z' ['c, med']))) +
  theme_classic() +
  theme(axis.title.x = element_blank(),
    axis.line.x = element_line(), 
    axis.line.y = element_line()
  )

# legend formatting, light requirements
scls <- c(2, 9)
scl_vals <- scales::rescale(dat$light, to = scls)
leg_brks <- seq(min(dat$light, na.rm =  T), max(dat$light, na.rm = T), length = 6)
leg_labs <- form_fun(leg_brks, 2, 2, 2)
  
# map, light requirements
p3 <- ggplot(fortify(choc_seg), aes(long, lat)) + 
  geom_polygon(colour = 'black', fill = fill_col, aes(group = group)) +
  geom_point(data = dat, aes(x = Longitude, y = Latitude, 
    colour = light), fill = 'black', alpha = 0.8, size = 3) +
  geom_text(data = labs, aes(label = seg, x = x, y = y)) +
  theme_classic() +
  coord_equal() +
  scale_x_continuous(labels = fmt()) + 
  xlab('Longitude') +
  scale_y_continuous(labels = fmt()) + 
  ylab('Latitude') +
  scale_size(name = '% light\nrequirements', range = scls, breaks = leg_brks, 
    labels = leg_labs) + 
  scale_colour_gradientn(name = '% light\nrequirements', 
    colours = pt_cols,
    breaks = leg_brks, labels = leg_labs) +
  guides(colour = guide_legend(), size = guide_legend()) + 
  guides(colour = guide_legend(), size = guide_legend())

p3leg <- g_legend(p3)
p3 <- p3 + theme(
  legend.position = 'none',
  axis.line.x = element_line(), 
  axis.line.y = element_line()
  )

# boxplots, light requirements
p4 <- ggplot(dat, aes(x = seg, y = light)) + 
  geom_boxplot(fill = fill_col, width = 0.6) + 
  ylab('% light requirements') +
  theme_classic() +
  theme(axis.title.x = element_blank(),
    axis.line.x = element_line(), 
    axis.line.y = element_line()
  )

# for filler
blankPanel <- grid.rect(gp=gpar(col="white"))

# align
# Get the widths
pA <- ggplot_gtable(ggplot_build(p1))
pB <- ggplot_gtable(ggplot_build(p2))
pC <- ggplot_gtable(ggplot_build(p3))
pD <- ggplot_gtable(ggplot_build(p4))
maxWidth = unit.pmax(pA$widths[2:3], pB$widths[2:3], pD$widths[2:3], pD$widths[2:3])

# Set the widths
pA$widths[2:3] <- maxWidth
pB$widths[2:3] <- maxWidth
pC$widths[2:3] <- maxWidth
pD$widths[2:3] <- maxWidth

pdf('figs/light_choc.pdf', height = 8, width = 8, family = 'serif')
grid.arrange(pA, p1leg, pB, blankPanel, pC, p3leg, pD, blankPanel, 
  ncol = 2, nrow = 4, 
  widths = c(1, 0.2), heights = c(1, 0.7, 1, 0.7))
dev.off()
@
\begin{figure}
\centering
\includegraphics[width = 0.95\textwidth]{figs/light_choc.pdf}
\caption{Estimated median depths of seagrass colonization and light requirements for multiple locations in Choctawhatchee Bay, Florida. Locations are those where water clarity estimates were available from satellite observations and seagrass depth of colonization was estimable using a radius of 0.04 decimal degrees.  Estimates are also summarized by bay segment as boxplots where the dimensions are the 25\textsuperscript{th} percentile, median, and 75\textsuperscript{th} percentile.  Whiskers extend beyond the boxes as 1.5 multiplied by the interquartile range. CCB: Central Choctawhatchee Bay, ECB: East Choctawhatchee Bay, WCB: West Choctawhatchee Bay.}
\label{fig:light_choc}
\end{figure}

% estimated light requirements for Tampa Bay
<<light_tb, echo = F, eval = T, cache = T, results = 'hide'>>=

# reset digits to default
options(digits = 7)

data(tb_light)
data(tb_seg)

# centroids for labels
labs <- data.frame(rgeos::gCentroid(tb_seg, byid = T))
labs$seg <- c('HB', 'LTB', 'MTB', 'OTB')

fill_col <- colors()[245]

# format data, remove outliers
dat <- data.frame(tb_light)
# outs <- quantile(dat$light, c(0.05, 0.95))
# dat <- dat[dat$light > outs[1] & dat$light < outs[2],]

# color ramp for all graphs
pt_cols <- c('blue', 'lightblue', 'yellow', 'brown')

# legend formatting, z_cmed
scls <- c(2, 9)
scl_vals <- scales::rescale(dat$z_c_all, to = scls)
leg_brks <- seq(min(dat$z_c_all, na.rm =  T), max(dat$z_c_all, na.rm = T), length = 6)
leg_labs <- form_fun(leg_brks, 2, 2, 2)

# map, z_cmed
p1 <- ggplot(fortify(tb_seg), aes(long, lat)) + 
  geom_polygon(colour = 'black', fill = fill_col, aes(group = group)) +
  geom_point(data = dat, aes(x = Longitude, y = Latitude, 
    colour = z_c_all), fill = 'black', alpha = 0.8) +
  geom_text(data = labs, aes(label = seg, x = x, y = y)) +
  theme_classic() +
  coord_equal() +
  scale_x_continuous(labels = fmt()) + 
  xlab('Longitude') +
  scale_y_continuous(labels = fmt()) + 
  ylab('Latitude') +
  scale_size(name = bquote(italic('Z' ['c, med'])), range = scls, 
    breaks = leg_brks, 
    labels = leg_labs) + 
  scale_colour_gradientn(name = bquote(italic('Z' ['c, med'])), 
    colours = rev(pt_cols),
    breaks = leg_brks, labels = leg_labs) +
  guides(colour = guide_legend(), size = guide_legend()) + 
  guides(colour = guide_legend(), size = guide_legend())

p1leg <- g_legend(p1)
p1 <- p1 + theme(legend.position = 'none',
  axis.line.x = element_line(), 
  axis.line.y = element_line()
  )

# boxplots by seg, z_cmed
# reorder seg labels
segs <- c('LTB', 'MTB', 'HB', 'OTB')
dat$seg <- factor(dat$seg, levels = segs) 
p2 <- ggplot(dat, aes(x = seg, y = z_c_all)) + 
  geom_boxplot(fill = fill_col) + 
  ylab(bquote(italic('Z' ['c, med']))) +
  theme_classic() +
  theme(axis.title.y = element_blank(),
    axis.line.x = element_line(), 
    axis.line.y = element_line()
  ) + 
  coord_flip()

# legend formatting, light requirements
scls <- c(2, 9)
scl_vals <- scales::rescale(dat$light, to = scls)
leg_brks <- seq(min(dat$light, na.rm =  T), max(dat$light, na.rm = T), length = 6)
leg_labs <- form_fun(leg_brks, 2, 2, 2)
  
# map, light requirements
p3 <- ggplot(fortify(tb_seg), aes(long, lat)) + 
  geom_polygon(colour = 'black', fill = fill_col, aes(group = group)) +
  geom_point(data = dat, aes(x = Longitude, y = Latitude, 
    colour = light), fill = 'black', alpha = 0.8) +
  geom_text(data = labs, aes(label = seg, x = x, y = y)) +
  theme_classic() +
  coord_equal() +
  scale_x_continuous(labels = fmt()) + 
  xlab('Longitude') +
  scale_y_continuous(labels = fmt()) + 
  ylab('Latitude') +
  scale_size(name = '% light\nrequirements', range = scls, breaks = leg_brks, 
    labels = leg_labs) + 
  scale_colour_gradientn(name = '% light\nrequirements', 
    colours = pt_cols,
    breaks = leg_brks, labels = leg_labs) +
  guides(colour = guide_legend(), size = guide_legend()) + 
  guides(colour = guide_legend(), size = guide_legend())

p3leg <- g_legend(p3)
p3 <- p3 + theme(legend.position = 'none',
  axis.line.x = element_line(), 
  axis.line.y = element_line()
  )

# boxplots, light requirements
p4 <- ggplot(dat, aes(x = seg, y = light)) + 
  geom_boxplot(fill = fill_col) + 
  ylab('% light requirements') +
  theme_classic() +
  theme(axis.title.y = element_blank(),
    axis.line.x = element_line(), 
    axis.line.y = element_line()
    ) + 
  coord_flip()

pdf('figs/light_tb.pdf', height = 7.5, width = 7, family = 'serif')
grid.arrange(p1, p1leg, p2, p3, p3leg, p4, ncol = 3, nrow = 2, 
  widths = c(1, 0.3, 0.75))
dev.off()
@
\begin{figure}
\centering
\includegraphics[width = 0.95\textwidth]{figs/light_tb.pdf}
\caption{Estimated median depths of seagrass colonization and light requirements for multiple locations in Tampa Bay, Florida. Locations are those where water clarity estimates were available from satellite observations and seagrass depth of colonization was estimable using a radius of 0.1 decimal degrees.  Estimates are also summarized by bay segment as boxplots as in \cref{fig:light_choc}. HB: Hillsborough Bay, LTB: Lower Tampa Bay, MTB: Middle Tampa Bay, OTB: Old Tampa Bay.}
\label{fig:light_tb}
\end{figure}

% estimated light requirements for Indian River Lagoon
<<light_irl, echo = F, eval = T, cache = T, results = 'hide'>>=

# reset digits to default
options(digits = 7)

data(irl_light)

data(irl_seg)

# centroids for labels, offset
labs <- data.frame(rgeos::gCentroid(irl_seg, byid = T, id = irl_seg$seg))
labs$x <- labs$x - 0.3
labs$seg <- rownames(labs)
labs <- labs[!labs$seg %in% c('LSL', 'LHR'), ]

fill_col <- colors()[245]

# format data, remove outliers
dat <- data.frame(irl_light)

# color ramp for all graphs
pt_cols <- c('blue', 'lightblue', 'yellow', 'brown')

# legend formatting, z_cmed
scls <- c(2, 9)
scl_vals <- scales::rescale(dat$z_c_all, to = scls)
leg_brks <- seq(min(dat$z_c_all, na.rm =  T), max(dat$z_c_all, na.rm = T), length = 6)
leg_labs <- form_fun(leg_brks, 2, 2, 2)

# map, z_cmed
p1 <- ggplot(fortify(irl_seg), aes(long, lat)) + 
  geom_polygon(colour = 'black', fill = fill_col, aes(group = group)) +
  geom_point(data = dat, aes(x = Longitude, y = Latitude, 
    colour = z_c_all), size = 3, fill = 'black', alpha = 0.8) +
  geom_text(data = labs, aes(label = seg, x = x, y = y)) +
  theme_classic() +
  coord_equal() +
  scale_x_continuous(limits = c(-81.3, -80)) + 
  xlab('Longitude') +
  scale_y_continuous() + 
  ylab('Latitude') +
  scale_size(name = bquote(italic('Z' ['c, med'])), range = scls, breaks = leg_brks, 
    labels = leg_labs) + 
  scale_colour_gradientn(name = bquote(italic('Z' ['c, med'])), 
    colours = rev(pt_cols),
    breaks = leg_brks, labels = leg_labs) +
  guides(colour = guide_legend(), size = guide_legend()) + 
  guides(colour = guide_legend(), size = guide_legend())

p1leg <- g_legend(p1)
p1 <- p1 + theme(legend.position = 'none',
  axis.line.x = element_line(), 
  axis.line.y = element_line()
  )

# boxplots by seg, z_cmed
# reorder seg labels
segs <- c('LSL', 'LIRL', 'LCIRL', 'UCIRL', 'BR', 'UIRL', 'LML', 'UML')
dat$seg <- factor(dat$seg, levels = segs) 
p2 <- ggplot(dat, aes(x = seg, y = z_c_all)) + 
  geom_boxplot(fill = fill_col) + 
  ylab(bquote(italic('Z' ['c, med']))) +
  theme_classic() +
  theme(axis.title.y = element_blank(),
    axis.line.x = element_line(), 
    axis.line.y = element_line()
    ) + 
  coord_flip()

# legend formatting, light requirements
scls <- c(2, 9)
scl_vals <- scales::rescale(dat$light, to = scls)
leg_brks <- seq(min(dat$light, na.rm =  T), max(dat$light, na.rm = T), length = 6)
leg_labs <- form_fun(leg_brks, 2, 2, 2)
  
# map, light requirements
p3 <- ggplot(fortify(irl_seg), aes(long, lat)) + 
  geom_polygon(colour = 'black', fill = fill_col, aes(group = group)) +
  geom_point(data = dat, aes(x = Longitude, y = Latitude, 
    colour = light), size = 3, fill = 'black', alpha = 0.8) +
  geom_text(data = labs, aes(label = seg, x = x, y = y)) +
  theme_classic() +
  coord_equal() +
  scale_x_continuous(limits = c(-81.3, -80)) + 
  xlab('Longitude') +
  scale_y_continuous() + 
  ylab('Latitude') +
  scale_size(name = '% light\nrequirements', range = scls, breaks = leg_brks, 
    labels = leg_labs) + 
  scale_colour_gradientn(name = '% light\nrequirements', 
    colours = pt_cols,
    breaks = leg_brks, labels = leg_labs) +
  guides(colour = guide_legend(), size = guide_legend()) + 
  guides(colour = guide_legend(), size = guide_legend())

p3leg <- g_legend(p3)
p3 <- p3 + theme(legend.position = 'none',
  axis.line.x = element_line(), 
  axis.line.y = element_line()
  )

# boxplots, light requirements
p4 <- ggplot(dat, aes(x = seg, y = light)) + 
  geom_boxplot(fill = fill_col) + 
  ylab('% light requirements') +
  theme_classic() +
  theme(axis.title.y = element_blank(),
    axis.line.x = element_line(), 
    axis.line.y = element_line()
    ) + 
  coord_flip()

pdf('figs/light_irl.pdf', height = 8.5, width = 6.5, family = 'serif')
grid.arrange(p1, p1leg, p2, p3, p3leg, p4, ncol = 3, nrow = 2, 
  widths = c(1, 0.3, 0.75))
dev.off()

options(digits = 1)
@
\begin{figure}
\centering
\includegraphics[width = 0.8\textwidth]{figs/light_irl.pdf}
\caption{Estimated median depths of seagrass colonization and light requirements for multiple locations in Indian River Lagoon, Florida.  Map locations are georeferenced observations of water clarity in the Florida \acl{IWR} database, update 40.  Estimates are also summarized by bay segment as boxplots as in \cref{fig:light_choc}. Light requirements are based on averaged secchi values within ten years of the seagrass coverage data and estimated maximum depth of colonization using a radius of 0.15 decimal degrees for each secchi location to sample seagrass depth points. BR: Banana R., LCIRL: Lower Central Indian R. Lagoon, LIRL: Lower Indian R. Lagoon, LML: Lower Mosquito Lagoon, LSL: Lower St. Lucie, UCIRL: Upper Central Indian R. Lagoon, UIRL: Upper Indian R. Lagoon, UML: Upper Mosquito Lagoon.}
\label{fig:light_irl}
\end{figure}

\end{document}